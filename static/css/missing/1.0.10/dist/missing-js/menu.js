import{$ as m,$$ as h,on as o,dispatch as c,halts as g,attr as i,next as E,prev as _,asHtml as a,hotkey as w,behavior as f,makelogger as k}from"./19.js";const l=k("menu"),x="[role=menu]",s="[role=menuitem]",p=e=>h(e,s),y=(e,{root:r})=>{const t=i(e,"aria-controls");return t===null?null:r.getElementById(t)},u=e=>m(e,s),v=e=>p(e).at(-1)??null,d=e=>!e.hidden,B=f(x,(e,{root:r})=>{if(!(e instanceof HTMLElement))return;let t;p(e).forEach(n=>n.setAttribute("tabindex","-1")),o(e,"menu:open",n=>{t=n.detail?.opener,t||l("Warning: Menu",e,"opened without passing an `opener` element"),e.hidden=!1,u(e)?.focus()}),o(e,"menu:close",n=>{l("menu:close",e.hidden=!0),t?.focus()}),o(e,"focusout",n=>{d(e)&&(e.contains(n.relatedTarget)||t!==n.relatedTarget&&c(e,"menu:close"))}),o(e,"keydown",g("default",w({ArrowUp:n=>a(_(e,s,r.activeElement,{}))?.focus(),ArrowDown:n=>a(E(e,s,r.activeElement,{}))?.focus(),Space:n=>a(r.activeElement?.closest(s))?.click(),Home:n=>u(e)?.focus(),End:n=>v(e)?.focus(),Escape:n=>c(e,"menu:close")}))),o(window,"click",n=>{d(e)&&t!==n.target&&c(e,"menu:close")},{addedBy:e})}),M=f("[aria-haspopup=menu]",(e,{root:r})=>{const t=y(e,{root:r});if(t===null)return l("Error: Menu button",e,"has no menu.");o(t,"menu:close",n=>i(e,"aria-expanded","false"),{addedBy:e}),o(t,"menu:open",n=>i(e,"aria-expanded","true"),{addedBy:e}),o(e,"click",()=>c(t,d(t)?"menu:close":"menu:open",{opener:e}))});B(document);M(document);export{B as menu,M as menuButton};

/*# sourceMappingURL=./menu.js.map */